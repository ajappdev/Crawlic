{
  "openapi": "3.0.0",
  "info": {
    "title": "Crawlic API",
    "description": "REST API for intelligent web scraping, data extraction, and AI-powered data querying",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "ajappdev@gmail.com"
    }
  },
  "servers": [
    {
      "url": "https://crawlic.ialae.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:9500",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Client registration and API key management"
    },
    {
      "name": "Scraping",
      "description": "Web scraping and content extraction operations"
    }
  ],
  "paths": {
    "/api/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new client",
        "description": "Creates a new client account and generates an API key for authentication",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email"],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe",
                    "description": "Client's full name"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "john@example.com",
                    "description": "Client's email address"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Client registered successfully"
                    },
                    "api_key": {
                      "type": "string",
                      "example": "a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6a7b8c9d0e1f2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/page-content": {
      "post": {
        "tags": ["Scraping"],
        "summary": "Get web page content",
        "description": "Retrieves the raw HTML content of a specified web page",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["link"],
                "properties": {
                  "link": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com",
                    "description": "URL of the web page to scrape"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved page content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "link": {
                          "type": "string",
                          "example": "https://example.com"
                        },
                        "content": {
                          "type": "string",
                          "example": "<!DOCTYPE html><html>...</html>"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing link parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Missing API key"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Invalid API key"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/describe-page": {
      "post": {
        "tags": ["Scraping"],
        "summary": "Get page content with AI analysis",
        "description": "Retrieves web page content and provides an AI-generated summary and type classification",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["link"],
                "properties": {
                  "link": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/blog/article",
                    "description": "URL of the web page to analyze"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully analyzed page content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string",
                          "example": "<!DOCTYPE html><html>...</html>"
                        },
                        "summary": {
                          "type": "string",
                          "example": "This is a blog post about web scraping techniques..."
                        },
                        "type": {
                          "type": "string",
                          "example": "blog",
                          "description": "Page type classification (e.g., blog, product, landing page)"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing link parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Missing API key"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Invalid API key"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/find-contact-email": {
      "post": {
        "tags": ["Scraping"],
        "summary": "Find contact emails on a page",
        "description": "Extracts all email addresses found on the specified web page",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["link"],
                "properties": {
                  "link": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/contact",
                    "description": "URL of the web page to search for emails"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully extracted email addresses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "link": {
                          "type": "string",
                          "example": "https://example.com/contact"
                        },
                        "emails": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "email"
                          },
                          "example": ["contact@example.com", "support@example.com"]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing link parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Missing API key"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Invalid API key"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API Key",
        "description": "Enter your API key obtained from the /register endpoint"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Name and email are required"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "Missing 'link' in request payload"
          }
        }
      }
    }
  }
}