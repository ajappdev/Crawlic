version: '3.8'

services:
  db:
    image: postgres:15
    container_name: crawlic_postgres
    restart: unless-stopped
    networks:
      - crawlic-internal
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: crawlic_redis
    restart: unless-stopped
    networks:
      - crawlic-internal
    volumes:
      - redis_data:/data
    command: >
      redis-server
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10

  web:
    image: alae1ajbar/crawlic:latest
    container_name: crawlic_flask
    restart: unless-stopped
    command: gunicorn main:app --bind 0.0.0.0:9500 --workers 1 --timeout 30
    networks:
      - crawlic-internal
    volumes:
      - static_volume:/app/static
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      REDIS_URL: redis://redis:6379/0
      ORGANIZATION_ID: ${ORGANIZATION_ID}
      PROJECT_ID: ${PROJECT_ID}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      - db
      - redis
    mem_limit: 300m
    memswap_limit: 300m

  worker:
    image: alae1ajbar/crawlic:latest
    restart: unless-stopped
    command: python3 -m celery -A celery_app worker --loglevel=info --concurrency=1 --max-tasks-per-child=1
    deploy:
      replicas: 5
    networks:
      - crawlic-internal
    volumes:
      - /dev/shm:/dev/shm
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      REDIS_URL: redis://redis:6379/0
      ORGANIZATION_ID: ${ORGANIZATION_ID}
      PROJECT_ID: ${PROJECT_ID}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    shm_size: '2gb'
    depends_on:
      - db
      - redis
    mem_limit: 1g
    memswap_limit: 1g

  # flower:
  #   image: alae1ajbar/crawlic:latest
  #   container_name: crawlic_flower
  #   restart: unless-stopped
  #   command: celery -A celery_app flower --port=5555
  #   networks:
  #     - crawlic-internal
  #   environment:
  #     REDIS_URL: redis://redis:6379/0
  #   depends_on:
  #     - redis
  #   ports:
  #     - "5555:5555"

  frontend:
    image: alae1ajbar/crawlic-frontend:latest
    container_name: crawlic_frontend
    restart: unless-stopped
    networks:
      - crawlic-internal
    mem_limit: 100m

  nginx:
    image: nginx:alpine
    container_name: crawlic_nginx
    restart: unless-stopped
    depends_on:
      - web
      - frontend
    networks:
      - crawlic-internal
      - traefik-public
    volumes:
      - static_volume:/app/static
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.crawlic.rule=Host(`crawlic.ialae.com`)"
      - "traefik.http.routers.crawlic.entrypoints=web"
      - "traefik.http.routers.crawlic-secure.rule=Host(`crawlic.ialae.com`)"
      - "traefik.http.routers.crawlic-secure.entrypoints=websecure"
      - "traefik.http.routers.crawlic-secure.tls.certresolver=letsencrypt"
      - "traefik.http.services.crawlic.loadbalancer.server.port=80"
    mem_limit: 50m

networks:
  crawlic-internal:
    driver: bridge
  traefik-public:
    external: true

volumes:
  postgres_data:
  redis_data:
  static_volume: