version: '3.8'

services:
  db:
    image: postgres:15
    container_name: crawlic_postgres
    restart: unless-stopped
    networks:
      - crawlic-internal
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  web:
    image: alae1ajbar/crawlic:latest
    container_name: crawlic_flask
    restart: unless-stopped
    command: gunicorn main:app --bind 0.0.0.0:9500 --workers 3 --timeout 120
    networks:
      - crawlic-internal
    volumes:
      - static_volume:/app/static
      # Shared memory for Chrome/Selenium
      - /dev/shm:/dev/shm
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      ORGANIZATION_ID: ${ORGANIZATION_ID}
      PROJECT_ID: ${PROJECT_ID}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    depends_on:
      - db
    # Optional: Increase shared memory for Chrome
    shm_size: '2gb'

  nginx:
    image: nginx:alpine
    container_name: crawlic_nginx
    restart: unless-stopped
    depends_on:
      - web
    networks:
      - crawlic-internal
      - traefik-public
    volumes:
      - static_volume:/app/static
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      # HTTP router (redirects to HTTPS)
      - "traefik.http.routers.crawlic.rule=Host(`crawlic.ialae.com`)"
      - "traefik.http.routers.crawlic.entrypoints=web"
      # HTTPS router
      - "traefik.http.routers.crawlic-secure.rule=Host(`crawlic.ialae.com`)"
      - "traefik.http.routers.crawlic-secure.entrypoints=websecure"
      - "traefik.http.routers.crawlic-secure.tls.certresolver=letsencrypt"
      # Service definition
      - "traefik.http.services.crawlic.loadbalancer.server.port=80"

networks:
  crawlic-internal:
    driver: bridge
  traefik-public:
    external: true

volumes:
  postgres_data:
  static_volume: