version: '3.8'

services:
  db:
    image: postgres:15
    container_name: crawlic_postgres_local
    restart: unless-stopped
    networks:
      - crawlic-internal
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5431:5432"

  redis:
    image: redis:7-alpine
    container_name: crawlic_redis_local
    restart: unless-stopped
    networks:
      - crawlic-internal
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crawlic_flask_local
    restart: unless-stopped
    command: gunicorn main:app --bind 0.0.0.0:9500 --workers 3 --timeout 30
    networks:
      - crawlic-internal
    volumes:
      - .:/app
      - static_volume:/app/static
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      REDIS_URL: redis://redis:6379/0
      ORGANIZATION_ID: ${ORGANIZATION_ID}
      PROJECT_ID: ${PROJECT_ID}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    depends_on:
      - db
      - redis
    ports:
      - "9500:9500"

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    command: celery -A celery_app worker --loglevel=info --concurrency=1 --max-tasks-per-child=1
    deploy:
      replicas: 3
    networks:
      - crawlic-internal
    volumes:
      - .:/app
      - /dev/shm:/dev/shm
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      REDIS_URL: redis://redis:6379/0
      ORGANIZATION_ID: ${ORGANIZATION_ID}
      PROJECT_ID: ${PROJECT_ID}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    shm_size: '2gb'
    depends_on:
      - db
      - redis

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crawlic_flower_local
    restart: unless-stopped
    command: celery -A celery_app flower --port=5555
    networks:
      - crawlic-internal
    volumes:
      - .:/app
    environment:
      REDIS_URL: redis://redis:6379/0
    depends_on:
      - redis
    ports:
      - "5555:5555"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: crawlic_frontend_local
    restart: unless-stopped
    networks:
      - crawlic-internal
    ports:
      - "3000:80"

  nginx:
    image: nginx:alpine
    container_name: crawlic_nginx_local
    restart: unless-stopped
    depends_on:
      - web
      - frontend
    networks:
      - crawlic-internal
    volumes:
      - static_volume:/app/static
      - ./nginx-local.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8000:80"

networks:
  crawlic-internal:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  static_volume: